{"version":3,"sources":["controllersFactory.js"],"names":[],"mappings":";;;;AAAA;;;;;;;;IAEM,kB;AACF,kCAAa;AAAA;;AACT,aAAK,QAAL,CAAc,MAAd,EAAsB,eAAK,WAA3B;AACH;;;;iCAEQ,I,EAAM,W,EAAY;AACvB,gBAAG,gBAAgB,QAAnB,EAA4B;AACxB,8BAAc,IAAd;AACA,uBAAO,IAAP;AACH;;AAED,gBAAG,EAAE,uBAAuB,QAAzB,CAAH,EAAsC;AAClC;AACA;AACA;AACA;AACH;;AAED,iBAAK,QAAQ,YAAY,IAAzB,IAAiC,WAAjC;AACH;;;+BAEM,I,EAAM,M,EAAO;AAChB,gBAAI,cAAc,KAAK,IAAL,CAAlB;AACA,gBAAG,EAAE,uBAAuB,QAAzB,CAAH,EAAsC;AAClC,sBAAM;AACF,0BAAM,OADJ;AAEF,6BAAS,kBAAkB,OAAlB,GAA4B;AAFnC,iBAAN;AAIH;AACD,mBAAO,IAAI,WAAJ,CAAgB,MAAhB,CAAP;AACH;;;;;;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"controllersFactory-compiled.js","sourcesContent":["import User from '../controllers/user';\r\n\r\nclass controllersFactory{\r\n    constructor(){\r\n        this.register('user', User.constructor);\r\n    }\r\n\r\n    register(name, constructor){\r\n        if(name instanceof Function){\r\n            constructor = name;\r\n            name = null;\r\n        }\r\n\r\n        if(!(constructor instanceof Function)){\r\n            // throw {\r\n            //     name: 'Error',\r\n            //     message: 'PetConstructor is not function'\r\n            // }\r\n        }\r\n\r\n        this[name || constructor.name] = constructor;\r\n    }\r\n\r\n    create(name, object){\r\n        let constructor = this[name];\r\n        if(!(constructor instanceof Function)){\r\n            throw {\r\n                name: 'Error',\r\n                message: 'constructor \"' + petName + '\" undefined'\r\n            }\r\n        }\r\n        return new constructor(object);\r\n    }\r\n}\r\n\r\n\r\n//\r\n// PetFactory.register = function(name, PetConstructor) {\r\n//     if (name instanceof Function) {\r\n//         PetConstructor = name;\r\n//         name = null;\r\n//     }\r\n//\r\n//     if (!(PetConstructor instanceof Function)) {\r\n//         throw {\r\n//             name: 'Error',\r\n//             message: 'PetConstructor is not function'\r\n//         }\r\n//     }\r\n//     this[name || PetConstructor.name] = PetConstructor;\r\n// };\r\n//\r\n// PetFactory.create = function(petName) {\r\n//     var PetConstructor = this[petName];\r\n//     if (!(PetConstructor instanceof Function)) {\r\n//         throw {\r\n//             name: 'Error',\r\n//             message: 'constructor \"' + petName + '\" undefined'\r\n//         }\r\n//     }\r\n//     return new PetConstructor();\r\n// };\r\n"]}