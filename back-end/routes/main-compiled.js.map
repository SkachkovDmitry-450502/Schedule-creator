{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["// var express = require('express');\r\n// var path = require('path');\r\n// var controller = require('../controllers/main');\r\n// var router = express.Router();\r\n\r\n// router.post('/get-schedules-name', function (req, res, next) {\r\n//     controller.getSchedulesName(req.body.email, function (err, result) {\r\n//         if (err) {\r\n//             next(err);\r\n//         } else {\r\n//             //console.log('schedules name was successful sent');\r\n//             res.send(JSON.stringify(result, function (key, value) {\r\n//                 if (key.slice(0, 2) == 'id') return undefined;\r\n//                 return value;\r\n//             }, 2));\r\n//         }\r\n//     });\r\n// });\r\n//\r\n// router.post('/get-schedule', function (req, res, next) {\r\n//     controller.sendScheduleInformation(req.body.email, req.body.name, function (err, schedule) {\r\n//         if (err) {\r\n//             next(err);\r\n//         } else {\r\n//             res.send(JSON.stringify(schedule, function (key, value) {\r\n//                 if (key.slice(0, 2) == 'id') return undefined;\r\n//                 return value;\r\n//             }, 2));\r\n//         }\r\n//     });\r\n// });\r\n//\r\n// router.post('/save-schedule', function (req, res, next) {\r\n//     controller.saveSchedule(req.body, function (err, isSave) {\r\n//         if (err) {\r\n//             next(err);\r\n//         } else {\r\n//             if (isSave) {\r\n//                 res.sendStatus(200);\r\n//             } else {\r\n//                 res.sendStatus(302);\r\n//             }\r\n//         }\r\n//     });\r\n// });\r\n//\r\n// router.post('/save-day', function (req, res, next) {\r\n//     controller.saveDay(req.body, function (err, isSave) {\r\n//         if (err) {\r\n//             next(err);\r\n//         } else {\r\n//             if (isSave) {\r\n//                 res.sendStatus(200);\r\n//             } else {\r\n//                 res.sendStatus(302);\r\n//             }\r\n//         }\r\n//     });\r\n// });\r\n//\r\n// router.post('/save-key', function (req, res, next) {\r\n//     controller.saveKey(req.body, function (err, isSave) {\r\n//         if(err){\r\n//             next(err);\r\n//         } else {\r\n//             if(isSave) {\r\n//                 res.sendStatus(200);\r\n//             } else {\r\n//                 res.sendStatus(302);\r\n//             }\r\n//         }\r\n//     })\r\n// });\r\n//\r\n// router.post('/save-object', function (req, res, next) {\r\n//     controller.saveObject(req.body, function (err, isSave) {\r\n//         if (err) {\r\n//             next(err);\r\n//         } else {\r\n//             if (isSave) {\r\n//                 res.sendStatus(200);\r\n//             } else {\r\n//                 res.sendStatus(302);\r\n//             }\r\n//         }\r\n//     })\r\n// });\r\n//\r\n// router.post('/delete-schedule', function (req, res, next) {\r\n//     console.log(req.body);\r\n//     controller.deleteSchedule(req.body['email'], req.body['name'], function (err, result) {\r\n//         if(err){\r\n//             next(err);\r\n//         } else {\r\n//             res.sendStatus(200);\r\n//         }\r\n//     });\r\n// });\r\nimport ControllerFactory from '../factories/controllersFactory';\r\nimport Schedule from '../controllers/schedule';\r\nimport Object from '../controllers/object';\r\nimport Property from '../controllers/property';\r\nimport Parameter from '../controllers/parameter';\r\nimport Day from '../controllers/day';\r\n\r\nimport path from 'path';\r\nimport express from 'express';\r\n\r\nconst OK_STATUS = 200;\r\nconst FORBIDDEN_STATUS = 403;\r\n\r\nlet router = express.Router();\r\n\r\nrouter.get('/', function (req, res, next) {\r\n    res.sendFile(path.resolve(__dirname, '../../front-end/main/main.html'));\r\n});\r\n\r\nrouter.post('/save', function (req, res, next) {\r\n    ControllerFactory.create(req.body.type)\r\n        .then(controller => {\r\n            controller.save(req.body.info);\r\n        })\r\n        .then(isSaved => {\r\n            isSaved ? res.sendStatus(OK_STATUS) : res.sendStatus(FORBIDDEN_STATUS);\r\n        })\r\n        .catch(error => next(error));\r\n});\r\n\r\nrouter.delete('/delete', function (req, res, next) {\r\n    ControllerFactory.create(req.body.type, req.body.info)\r\n        .then(controller => {\r\n            controller.delete(req.body.info);\r\n        })\r\n        .then(isDeleted => {\r\n            isDeleted ? res.sendStatus(OK_STATUS) : res.sendStatus(FORBIDDEN_STATUS);\r\n        })\r\n        .catch(error => next(error));\r\n});\r\n\r\nrouter.post('/update', function (req, res, next) {\r\n    ControllerFactory.create(req.body.type, req.body.info)\r\n        .then(controller => {\r\n            controller.update(req.body.oldInfo, req.body.newInfo);\r\n        })\r\n        .then(isUpdated => {\r\n            isUpdated ? res.sendStatus(OK_STATUS) : res.sendStatus(FORBIDDEN_STATUS);\r\n        })\r\n        .catch(error => next(error));\r\n});\r\n\r\n//TODO maybe get request?\r\nrouter.post('/get', function (req, res, next) {\r\n    let tmp = {};\r\n    Schedule.get(req.body)\r\n        .then(schedules => {\r\n            tmp = schedules;\r\n            return Promise.all([\r\n                Day.get(schedules[0]),\r\n                Parameter.get(schedules[0]),\r\n                Object.get(schedules[0])\r\n                    .then(objects => Property.get(objects))\r\n            ]);\r\n        })\r\n        .then(result => {\r\n            tmp.schedule.days = result[0];\r\n            tmp.schedule.parameters = result[1];\r\n            tmp.schedule.objects = result[2];\r\n        })\r\n        .catch(error => next(error));\r\n});\r\n\r\nmodule.exports = router;"]}